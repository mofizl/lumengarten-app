name: Build and Deploy to App Stores

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release type'
        required: true
        default: 'testflight'
        type: choice
        options:
        - testflight
        - production

env:
  FLUTTER_VERSION: '3.24.3'

jobs:
  # Test Job - läuft für alle Pushes
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        cache: true
    
    - name: Get dependencies
      run: flutter pub get
    
    - name: Analyze code
      run: flutter analyze
    
    - name: Run tests
      run: flutter test

  # Android Build Job
  android:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        cache: true
    
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
    
    - name: Get dependencies
      run: flutter pub get
    
    - name: Create Android keystore
      run: |
        echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > android/app/keystore.jks
        echo "storeFile=keystore.jks" >> android/key.properties
        echo "keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}" >> android/key.properties
        echo "storePassword=${{ secrets.ANDROID_STORE_PASSWORD }}" >> android/key.properties
        echo "keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}" >> android/key.properties
    
    - name: Build Android APK
      run: flutter build apk --release
    
    - name: Build Android AAB
      run: flutter build appbundle --release
    
    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: android-apk
        path: build/app/outputs/flutter-apk/app-release.apk
    
    - name: Upload AAB artifact
      uses: actions/upload-artifact@v4
      with:
        name: android-aab
        path: build/app/outputs/bundle/release/app-release.aab

  # iOS Build Job - Simplified for Simulator
  ios:
    needs: test
    runs-on: macos-14
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Select Xcode version
      run: |
        sudo xcode-select -s /Applications/Xcode_15.4.app/Contents/Developer
        xcode-select -p
        xcodebuild -version
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        cache: true
    
    - name: Get dependencies
      run: flutter pub get
    
    - name: Install CocoaPods
      run: |
        cd ios
        pod install
    
    - name: Clean previous builds
      run: |
        flutter clean
        cd ios
        rm -rf build/ || true
        rm -rf Pods/ || true
        rm -rf .symlinks/ || true
        rm Podfile.lock || true

    - name: Build iOS (No Code Signing)
      run: |
        echo "Available iOS Simulators:"
        xcrun simctl list devices | grep "iPhone 15" | head -3
        
        echo "Available iOS SDKs:"
        xcodebuild -showsdks | grep -E "(iphoneos|iphonesimulator)"
        
        cd ios
        
        # Ensure deployment target consistency
        echo "Setting iOS deployment target to 12.0..."
        sed -i.bak 's/IPHONEOS_DEPLOYMENT_TARGET = [0-9.]*/IPHONEOS_DEPLOYMENT_TARGET = 12.0/g' Runner.xcodeproj/project.pbxproj
        
        # Build for iOS Simulator with explicit settings
        echo "Starting iOS Simulator build..."
        
        # Use generic iOS Simulator destination for maximum compatibility
        xcodebuild -workspace Runner.xcworkspace \
          -scheme Runner \
          -configuration Release \
          -sdk iphonesimulator \
          -destination 'generic/platform=iOS Simulator' \
          -derivedDataPath build \
          IPHONEOS_DEPLOYMENT_TARGET=12.0 \
          ONLY_ACTIVE_ARCH=YES \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO \
          build
          
        echo "iOS build completed successfully!"
    
    - name: Upload build logs
      uses: actions/upload-artifact@v4
      with:
        name: ios-build-logs-deploy-workflow
        path: ios/build/
        if-no-files-found: warn